def DFS(L, sum):
    if L == k:
        # 양수만 확인해도됨 (음수는 안봐도 되는이유? 왼쪽에 1, 5 오른쪽에 7인경우 -1이다 . 다른 경우 왼쪽에 7, 오른쪽에 1,5 인경우 1이다. 둘이 대칭구조가 계속 생긴다.
        # 즉 한번만 세도된다.)
        if 0 < sum <= s:
            # set 자료구조에 넣는이유? 왼쪽에 7 오른쪽에 1,5 인경우 오른쪽으로 1그램 이된다, 왼쪽에 1그램 사용, 5그램 7그램 사용을 안한다해도 1그램이다.
            # 이런경우에는 1이 중복해서 2번 들어가므로 그냥 한번만 세도된다.
            res.add(sum)

    else:
        DFS(L+1, sum+g[L])
        DFS(L+1, sum-g[L])
        DFS(L+1, sum)


if __name__ == "__main__":
    k = int(input())
    # 무게 입력받을 리스트 초기화
    g = list(map(int, input().split()))
    # g에서 입력받은 추의 무게의 총 합을 구하는 리스트
    s = sum(g)
    res = set()
    DFS(0, 0)
    print(s-len(res))
